From db22488ce78dd72a855611b919e1a66973a72469 Mon Sep 17 00:00:00 2001
From: Laine Stump <laine@laine.org>
Date: Fri, 6 Mar 2015 18:13:23 -0500
Subject: [PATCH 03/13] remove unnecessary calls to get_augeas()

Required to prevent merge conflicts when backporting the patches to
resolve:

  https://bugzilla.redhat.com/show_bug.cgi?id=1165966
  (CVE-2104-8119)

There were several functions in drv_redhat.c that apparently had
previously required an augeas object, but no longer do (if the augeas
object was required, the return value of get_augeas() would have been
saved, and the side effect of rereading the augeas tree from disk
isn't needed as any subordinate function that required the augeas
object to be up-to-date would also need to call get_augeas() in order
to get its own pointer to the augeas object).

This has no functional effect, it's just removing redundant code.
(cherry picked from commit a34b12bb6148ab955c8d5f9d43245a4ba9655aa8)
---
 src/drv_redhat.c |   12 ------------
 1 files changed, 0 insertions(+), 12 deletions(-)

diff --git a/src/drv_redhat.c b/src/drv_redhat.c
index 14ed787..fb7fca6 100644
--- a/src/drv_redhat.c
+++ b/src/drv_redhat.c
@@ -171,9 +171,6 @@ static char *find_ifcfg_path_by_device(struct netcf *ncf, const char *name) {
     int ndevs = 0;
     char **devs = NULL;
 
-    get_augeas(ncf);
-    ERR_BAIL(ncf);
-
     ndevs = aug_fmt_match(ncf, &devs, "%s[DEVICE = '%s']",
                           ifcfg_path, name);
     ERR_COND_BAIL(ndevs < 0, ncf, EOTHER);
@@ -314,9 +311,6 @@ static int list_ifcfg_paths(struct netcf *ncf, char ***intf) {
 static int list_interfaces(struct netcf *ncf, char ***intf) {
     int nint = 0, result = 0;
 
-    get_augeas(ncf);
-    ERR_BAIL(ncf);
-
     /* Look in augeas for all interfaces */
     nint = list_ifcfg_paths(ncf, intf);
     ERR_BAIL(ncf);
@@ -463,9 +457,6 @@ struct netcf_if *drv_lookup_by_name(struct netcf *ncf, const char *name) {
     char *pathx = NULL;
     char *name_dup = NULL;
 
-    get_augeas(ncf);
-    ERR_BAIL(ncf);
-
     pathx = find_ifcfg_path(ncf, name);
     ERR_BAIL(ncf);
 
@@ -934,9 +925,6 @@ int drv_lookup_by_mac_string(struct netcf *ncf, const char *mac,
 
     MEMZERO(ifaces, maxifaces);
 
-    get_augeas(ncf);
-    ERR_BAIL(ncf);
-
     nmatches = aug_match_mac(ncf, mac, &matches);
     ERR_BAIL(ncf);
     if (nmatches == 0) {
-- 
1.7.1

